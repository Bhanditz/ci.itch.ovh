
- :windows-os: &windows-os
    var-l: '%'
    var-r: '%'
    exe-l: ''
    exe-r: '.exe'

- :linux-os: &linux-os
    var-l: '$'
    var-r: ''
    exe-l: './'
    exe-r: ''

- :go-build-binary: |
    go get -v ./...
    go build -v -ldflags "{os.var-l}JENKINS_LDFLAGS{os.var-r}" {pkg}
    file {exe}{os.exe-r}
    {os.exe-l}{exe} -V
    7za a {exe}.7z {exe}{os.exe-r}
    echo {os.var-l}JENKINS_VERSION{os.var-r} > LATEST

- :go-job:
    job:
      name: '{name}'
      project-type: matrix
      node: 'gcs'
      execution-strategy:
        combination-filter: (os == "osx").implies(arch == "amd64")
      parameters:
        - string:
            name: JENKINS_TAG
      axes:
        - axis:
            type: label-expression
            name: os
            values:
              - windows
              - osx
              - linux
        - axis:
            type: user-defined
            name: arch
            values:
              - 386
              - amd64
      workspace: 'workspace/{name}/$os-$arch/src/{git.host}/{git.user}/{git.name}'
      child-workspace: .
      scm:
        - .git: '{git}'
      wrappers:
        - inject:
            groovy-script-content:
              .export-go-env:
      builders:
        - .shell:
            .go-build-binary:
              os: *linux-os
              pkg: '{pkg}'
              exe: '{exe}'
        - .batch:
            .go-build-binary:
              os: *windows-os
              pkg: '{pkg}'
              exe: '{exe}'
      publishers:
        - .on-deploy:
            - s3:
                s3-profile: misc.amos.me
                entries:
                  - destination-bucket: 'misc.amos.me/{exe}-jenkins/$os-$arch/${ENV,var="JENKINS_VERSION"}'
                    source-files: '{exe}.7z'
                  - destination-bucket: 'misc.amos.me/{exe}-jenkins/$os-$arch'
                    source-files: 'LATEST'
