
- :go-job:
    job:
      name: '{name}'
      project-type: matrix
      node: gcs
      execution-strategy:
        combination-filter: (JENKINS_OS == "darwin").implies(JENKINS_ARCH == "amd64")
      parameters:
        - string:
            name: JENKINS_TAG
            default: '**'
        - string:
            name: JENKINS_DEPLOY
            default: 0
      axes:
        - ..osarch-axes:
            os: ['windows', 'darwin', 'linux']
            arch: ['386', 'amd64']
      scm:
        - .git-go: '{git}'
      wrappers:
        - ansi-color
        - inject
        - workspace-cleanup:
            delete-dirs: true
      builders:
        - shell: |
              export GOPATH="$WORKSPACE"
              export GOARCH="$JENKINS_ARCH"
              export CGO_ENABLED=1
              export CC_FOR_TARGET="gcc"
              export CXX_FOR_TARGET="g++"
              export JENKINS_VERSION="head"
              if [ "$JENKINS_DEPLOY" = "1" ]; then
                export JENKINS_VERSION=$JENKINS_TAG
              fi
              export JENKINS_LDFLAGS="-X main.version=$JENKINS_VERSION"

              TARGET={exe}
              if [ "$JENKINS_OS" = "windows" ]; then
                TARGET=$TARGET.exe
                if [ "$JENKINS_ARCH" = "amd64" ]; then
                  export PATH=/mingw64/bin:$PATH
                else
                  export PATH=/mingw32/bin:$PATH
                fi
              else
                export PATH=$PATH:/usr/local/go/bin
              fi

              JENKINS_IMPORT_PATH={git.host}/{git.repo}
              go get -v -d $JENKINS_IMPORT_PATH/...
              go build -v -ldflags "$JENKINS_LDFLAGS" $JENKINS_IMPORT_PATH/{pkg}

              file $TARGET
              ./$TARGET -V

              if [ "$JENKINS_DEPLOY" = "1" ]; then
                7za a {exe}.7z $TARGET
                echo $JENKINS_VERSION > LATEST
              fi
      publishers:
        - .deploy-to-gcs:
            package: '{exe}'
